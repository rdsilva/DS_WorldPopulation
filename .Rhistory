plot(cars)
library("caret", lib.loc="~/anaconda3/lib/R/library")
y <- 125
2 + 3
10 * 10
x <- 150
y <- 125
library("tidyverse", lib.loc="~/anaconda3/lib/R/library")
?tidyverse
require(tidyverse)
library(tidyverse)
install.packages("ggplot2movies")
install.packages("nycflights13")
library(tidyverse)
library(ggplot2movies)
library(nycflights13)
install.packages("read.dbc")
library(tidyverse)
library(ggplot2movies)
library(nycflights13)
data("movies")
data("flights")
head(movies)
str(movies)
head(flights)
str(flights)
movies_title_year <- select(movies, title, year)
movies_wo_title <- select(movies, -title)
movies_subset <- select(movies, title:rating)
movies_subset_title <- select(movies, -(title:rating))
movies_rs <- select(movies, num_range("r", 1:5))
movies_tit <- select(movies, starts_with("tit"))
flights_time <- select(flights, starts_with("time"))
flights_time <- select(flights, contains("time"))
flights_subset <- select(flights, year:dep_delay)
flights_arranged <- arrange(flights, time_hour)
flights_arranged_desc <- arrange(flights, desc(time_hour))
longest_movie <- slice(flights_arranged_desc, 1)
longest_movie
movies_arranged_desc <- arrange(movies, desc(length))
longest_movie <- slice(movies_arranged_desc, 1)
longest_movie
movies_long_than_90 <- filter(movies, length > 90)
View(flights)
movies_equal_to_90 <- filter(movies, length == 90)
movies_diff_to_90 <- filter(movies, length != 90)
flights_from_jfk <- filter(flights, origin == "JFK")
movies <- mutate(movies, duracao_hora = length/60)
str(movies)
flights_ny_december <- arrange(filter(flights, month == 12, origin == "JFK"), day)
View(flights_ny_december)
flights_ny_december <- arrange(filter(flights, month == 12, origin == "EWR"), day)
View(flights_ny_december)
View(flights_ny_december)
flights_ny_december_piped <- flights %>%
arrange(day) %>%
filter(month == 12, origin == "EWR")
summarise(flights)
flights_means <- flights %>%
summarise(media_atraso_partida = mean(dep_delay, na.rm = T)) %>%
summarise(media_atraso_chegada = mean(arr_delay, na.rm = T))
flights_means <- flights %>%
summarise(media_atraso_partida = mean(dep_delay, na.rm = T),
media_atraso_chegada = mean(arr_delay, na.rm = T))
View(flights_means)
flights_means_grouped <- flights %>%
group_by(origin) %>%
summarise(media_atraso_partida = mean(dep_delay, na.rm = T),
media_atraso_chegada = mean(arr_delay, na.rm = T))
View(flights_means_grouped)
movies <- movies %>%
mutate(grande_pequeno = ifelse(length > 90, "Grande", "Pequeno"))
hist(movies$grande_pequeno)
movies_budget_mean <- movies %>%
summarise(budget_mean = mean(budget, na.rm = T))
View(movies_budget_mean)
movies_budget_mean <- movies %>%
group_by(grande_pequeno) %>%
summarise(budget_mean = mean(budget, na.rm = T))
View(flights)
flights_means_month <- flights %>%
group_by(month) %>%
summarise(mean_dep = mean(dep_delay, na.rm = T),
mean_arr = mean(arr_delay, na.rm = T))
View(flights_means_month)
View(movies)
movies_gender <- movies %>%
gather(genero, valor, Action:Short)
View(movies_gender)
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>%
filter(valor == 1) %>%
select(-valor)
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) %>% # dropando a coluna não desejada
group_by(genero) %>%
summarise(mean_budget = mean(budget, na.rm = T),
mean_length = mean(length, na.rm = T))
View(movies_gender)
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) %>% # dropando a coluna não desejada
group_by(genero) %>% # agrupando os dados
summarise(mean_budget = mean(budget, na.rm = T),
mean_length = mean(length, na.rm = T)) %>% # calculando as medias
arrange(desc(mean_budget)) # ordenando os resultados
options(scipen=99999999) # forçando o R a processar o valor em numerico e não em cientifico
movies_gender <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) %>% # dropando a coluna não desejada
group_by(genero) %>% # agrupando os dados
summarise(mean_budget = mean(budget, na.rm = T),
mean_length = mean(length, na.rm = T),
median_budget = median(budget, na.rm = T),
median_length = median(length, na.rm = T)) %>% # calculando as medias
arrange(desc(mean_budget)) # ordenando os resultados
sumary(movies)
summary(movies)
summary(select(movies, genero == "Action")
zx
movies_tmp <- movies %>%
gather(genero, valor, Action:Short) %>% # verticalizando o dataset
filter(valor == 1) %>% # filtrando os valores não desejados
select(-valor) # dropando a coluna não desejada
movies_horizon <- movies_tmp %>%
mutate(valor = 1) %>%
spread(genero, valor, fill = 0)
brasileiro <- read.csv("~/Documents/CodaBR/Bootcamp - Data Wrangler in R/linux/brasileiro.dat", sep=";")
View(brasileiro)
corinthians_means <- brasileiro %>%
filter(time_casa == "corinthians", time_fora == "corinthians")
View(corinthians_means)
corinthians_means <- brasileiro %>%
filter(time_casa == "corinthians" | time_fora == "corinthians")
View(corinthians_means)
View(corinthians_means)
corinthians_means <- brasileiro %>%
filter(time_casa == "corinthians" | time_fora == "corinthians") %>%
mutate(saldo = gols_casa - gols_fora) %>%
mutate(casa_visitante = ifelse(time_fora == "corinthians", "visitante", "casa")) %>%
mutate(saldo = ifelse(time_fora == "corinthians", saldo*(-1), saldo)) %>%
group_by(casa_visitante) %>%
summarise(media_saldo = mean(saldo))
View(corinthians_means)
dataset <- read.csv2("WPP2017_TotalPopulationBySex.csv", header=T)
getwd()
setwd("~/Documents/Estudos/World Population")
dataset <- read.csv2("WPP2017_TotalPopulationBySex.csv", header=T)
# visualizando a estrutura
str(dataset)
# carregado o dataset
dataset <- read.csv("WPP2017_TotalPopulationBySex.csv", header=T)
# visualizando a estrutura
str(dataset)
head(dataset)
# gerando um subset com apenas os dados de: LOCATION, TIME, POPMALE, POPFEMALE, POPTOTAL
data <- subset(dataset, select = c("Location", "Time", "PopMale", "PopFemale", "PopTotal"))
# verificando o subset
str(data)
# criando um subset do Brasil
brasil <- subset(data, Location == "Brazil")
# verificando o subset
str(brasil)
head(brasil)
brasil <- droplevels(brasil)
# verificando o subset
str(brasil)
head(brasil)
# plotando os dados de população pelo tempo
plot(brasil)
plot(brasil$Time, brasil$PopTotal)
plot(brasil$Time, brasil$PopTotal, type = "h", col = "red")
plot(brasil$Time, brasil$PopTotal, type = "l", col = "red")
plot(brasil$Time, brasil$PopTotal, type = "b", col = "red")
plot(brasil$Time, brasil$PopTotal, type = "l", col = "red")
plot(brasil$Time, brasil$PopTotal)#, type = "l", col = "red")
# importando biblioteca
library(tidyverse)
mundo <- dataset %>%
group_by(Time) %>%
summarise(Male = sum(PopMale),
Female = sum(PopFemale),
Total = sum(PopTotal))
# verificando os dados
str(mundo)
head(mundo)
# plotando os dados do mundo
plot(mundo$Time, c("Male", "Female", "Total"))
# plotando os dados do mundo
plot(mundo$Time, mundo$Total)
# plotando os dados do mundo
ggplot(mundo)
# plotando os dados do mundo
ggplot(mundo, aes(Male, Female, Total))
# plotando os dados do mundo
ggplot(mundo, aes(Time, Female, Total))
# plotando os dados do mundo
ggplot(mundo, aes(Time, Female))
myplot <- ggplot(mundo,aes(Time,Total))+
geom_bar(position="dodge",stat="identity")
print(myplot)
myplot <- ggplot(mundo,aes(Time,Total)) +  geom_line()
print(myplot)
# plotando os dados do mundo
myplot <- ggplot(mundo,aes(Time,Total)) +  geom_line(colour = "red")
print(myplot)
plot_male <- ggplot(mundo,aes(Time,Male)) +  geom_line(colour = "blue")
plot_female <- ggplot(mundo,aes(Time,Female)) +  geom_line(colour = "yellow")
# plotando os dados do mundo
plot_total <- ggplot(mundo,aes(Time,Total)) +  geom_line(colour = "red")
print(plot_total, plot_male, plot_female)
ggplot(mundo,aes(Time,Total)) +  geom_line(colour = "red")
ggplot(mundo,aes(Time,Male)) +  geom_line(colour = "blue")
ggplot(mundo,aes(Time,Female)) +  geom_line(colour = "yellow")
ggplot(mundo,aes(Time,Total)) +  geom_line(colour = "red") +
ggplot(mundo,aes(Time,Male)) +  geom_line(colour = "blue") +
ggplot(mundo,aes(Time,Female)) +  geom_line(colour = "yellow")
mundo_2017 <- <- subset(dataset, select = c("Location", "Time", "PopMale", "PopFemale", "PopTotal"), Time <= 2017)
mundo_2017 <- subset(dataset, select = c("Location", "Time", "PopMale", "PopFemale", "PopTotal"), Time <= 2017)
library(ggplot2)
chart <- ggplot()
chart <- ggplot() +
geom_line(data = mundo_2017,
aes(x = Time, y = PopTotal, color = Location))
print(chart)
chart <- ggplot() +
geom_line(data = mundo_2017,
aes(x = Time, y = PopTotal, color = Location)) +
theme(legend.position = "none")
print(chart)
continentes <- dataset %>%
group_by(Time) %>%
group_by(VarID) %>%
filter(Time <= 2017) %>%
summarise(Male = sum(PopMale),
Female = sum(PopFemale),
Total = sum(PopTotal))
chart <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = PopTotal, color = Location))
print(chart)
continentes <- dataset %>%
select(Location, Time, VarID, PopMale, PopFemale, PopTotal) %>%
group_by(Time) %>%
group_by(VarID) %>%
filter(Time <= 2017) %>%
summarise(Male = sum(PopMale),
Female = sum(PopFemale),
Total = sum(PopTotal))
chart <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = PopTotal, color = Location))
print(chart)
head(continentes)
continentes <- dataset %>%
select(Location, Time, VarID, PopMale, PopFemale, PopTotal) %>%
filter(Time <= 2017) %>%
group_by(Time) %>%
group_by(VarID) %>%
summarise(Male = sum(PopMale),
Female = sum(PopFemale),
Total = sum(PopTotal))
head(continentes)
continentes <- dataset %>%
select(Location, Time, VarID, PopMale, PopFemale, PopTotal) %>%
filter(Time <= 2017) %>%
group_by(Time,VarID) %>%
summarise(Male = sum(PopMale),
Female = sum(PopFemale),
Total = sum(PopTotal))
head(continentes)
chart <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = PopTotal, color = Location))
print(chart)
chart <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = Total, color = Location))
print(chart)
chart <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = Total, color = VarID))
print(chart)
str(continentes)
chart <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = Total, group = VarID, color = VarID))
print(chart)
tail(continentes)
dataset$Variant
levels(dataset$Variant)
levels(dataset$Location)
brasil <- subset(dataset, Location == "Brazil", Time <= 2017)
brasil <- droplevels(brasil)
head(brasil)
chart <- ggplot() +
geom_line(data = brasil,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant))
print(chart)
tail(brasil)
brasil <- subset(dataset, Location == "Brazil" & Time <= 2017)
brasil <- droplevels(brasil)
head(brasil)
tail(brasil)
chart <- ggplot() +
geom_line(data = brasil,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant))
print(chart)
brasil <- subset(dataset, Location == "Brazil")
brasil <- droplevels(brasil)
head(brasil)
tail(brasil)
chart <- ggplot() +
geom_line(data = brasil,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant))
print(chart)
# canada
canada <- subset(dataset, Location == "Canada")
canada <- droplevels(canada)
head(canada)
tail(canada)
chart <- ggplot() +
geom_line(data = canada,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant))
print(chart)
chart_br <- ggplot() +
geom_line(data = brasil,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant))
chart_ca <- ggplot() +
geom_line(data = canada,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant))
grid.arrange(chart_br, chart_ca, ncol=2)
library(gridExtra)
br_ca <- subset(dataset, Location %in% c("Brazil", "Canada"))
chart_br_ca <- ggplot() +
geom_line(data = br_ca,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant)) +
facet_grid( Location ~ .)
print(chart_br_ca)
chart_mundo <- ggplot() +
geom_line(data = dataset,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant)) +
facet_grid( Location ~ .)
print(chart_mundo)
View(chart_mundo)
america <- subset(dataset, Location %in% c("Mexico","Canada","United States of America"))
continentes <- subset(dataset, Location %in% c("South America","Oceania","Central America",
"Europe","Asia","Africa"))
str(america)
names(america)
america <- dataset %>%
select(LocID, Location,VarID,Variant,Time,MidPeriod,PopMale,PopFemale,PopTotal) %>%
group_by(VarID,Variant,Time,MidPeriod) %>%
summarise(PopMale = sum(PopMale),
PopFemale = sum(PopFemale),
PopTotal = sum(PopTotal))
str(america)
america <- dataset %>%
select(LocID, Location,VarID,Variant,Time,MidPeriod,PopMale,PopFemale,PopTotal) %>%
group_by(VarID,Variant,Time,MidPeriod) %>%
mutate(LocID = 0) %>%
mutate(Location = "North America") %>%
summarise(PopMale = sum(PopMale),
PopFemale = sum(PopFemale),
PopTotal = sum(PopTotal))
str(america)
america <- droplevels(america)
str(america)
head(america)
america <- dataset %>%
select(LocID, Location,VarID,Variant,Time,MidPeriod,PopMale,PopFemale,PopTotal) %>%
group_by(VarID,Variant,Time,MidPeriod) %>%
summarise(PopMale = sum(PopMale),
PopFemale = sum(PopFemale),
PopTotal = sum(PopTotal)) %>%
mutate(LocID = 0) %>%
mutate(Location = "North America")
america <- droplevels(america)
str(america)
head(america)
america <- america[8,9,1,2,3,4,5,6,7,.]
america <- america[[8,9,1,2,3,4,5,6,7],]
america <- america %>%
select(LocID, Location,VarID,Variant,Time,MidPeriod,PopMale,PopFemale,PopTotal)
america <- droplevels(america)
str(america)
head(america)
continentes <- rbind(continentes, america)
chart_mundo <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant)) +
facet_grid( Location ~ .)
head(continentes)
america$LocID <- as.Integer(america$LocID)
america$LocID <- as.integer(america$LocID)
america$Location <- as.factor(america$Location)
america <- droplevels(america)
str(america)
head(america)
continentes <- subset(dataset, Location %in% c("South America","Oceania","Central America",
"Europe","Asia","Africa"))
droplevels(continentes)
continentes <- droplevels(continentes)
continentes <- rbind(continentes, america)
head(continentes)
# carregado o dataset
dataset <- read.csv("WPP2017_TotalPopulationBySex.csv", header=T)
continentes <- subset(dataset, Location %in% c("South America","Oceania","Central America",
"Europe","Asia","Africa"))
head(continentes)
str(continentes)
america <- subset(dataset, Location %in% c("Mexico","Canada","United States of America"))
america <- dataset %>%
select(LocID, Location,VarID,Variant,Time,MidPeriod,PopMale,PopFemale,PopTotal) %>%
group_by(VarID,Variant,Time,MidPeriod) %>%
summarise(PopMale = sum(PopMale),
PopFemale = sum(PopFemale),
PopTotal = sum(PopTotal)) %>%
mutate(LocID = 0) %>%
mutate(Location = "North America")
america <- subset(dataset, Location %in% c("Mexico","Canada","United States of America"))
america <- dataset %>%
select(LocID, Location,VarID,Variant,Time,MidPeriod,PopMale,PopFemale,PopTotal) %>%
group_by(VarID,Variant,Time,MidPeriod) %>%
summarise(PopMale = sum(PopMale),
PopFemale = sum(PopFemale),
PopTotal = sum(PopTotal)) %>%
mutate(LocID = 0) %>%
mutate(Location = "North America")
america <- droplevels(america)
america <- america %>%
select(LocID, Location,VarID,Variant,Time,MidPeriod,PopMale,PopFemale,PopTotal)
america <- droplevels(america)
america$LocID <- as.integer(america$LocID)
america$Location <- as.factor(america$Location)
str(america)
america <- droplevels(america)
str(america)
america <- as.data.frame(america)
america <- droplevels(america)
str(america)
head(america)
continentes <- rbind(continentes, america)
head(continentes)
str(continentes)
chart_mundo <- ggplot() +
geom_line(data = continentes,
aes(x = Time, y = PopTotal, group = interaction(Variant, VarID), color = Variant)) +
facet_grid( Location ~ .)
print(chart_mundo)
